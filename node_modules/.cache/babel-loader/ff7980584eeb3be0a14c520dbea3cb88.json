{"ast":null,"code":"var _jsxFileName = \"/Users/qiwenruan/Desktop/robofriends/src/CardList.js\";\nimport React from 'react';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardList = _ref => {\n  let {\n    robots\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: robots.map((user, index) => {\n      return;\n\n      /*#__PURE__*/\n      _jsxDEV(Card, {\n        id: robots[index].id,\n        name: robots[index].name,\n        email: robots[index].email\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CardList;\nexport default CardList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"names":["React","Card","CardList","robots","map","user","index","id","name","email"],"sources":["/Users/qiwenruan/Desktop/robofriends/src/CardList.js"],"sourcesContent":["import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) =>{\n  \n    return (\n        <div>\n            {\n            robots.map((user,index) => {\n                return \n                <Card key={index} \n                id ={robots[index].id} \n                name = {robots[index].name} \n                email={robots[index].email} \n                />\n            \n            }\n            )\n        }\n        \n        </div>\n\n    );\n\n}\n\nexport default CardList;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,QAAQ,GAAG,QAAa;EAAA,IAAZ;IAACC;EAAD,CAAY;EAE1B,oBACI;IAAA,UAEIA,MAAM,CAACC,GAAP,CAAW,CAACC,IAAD,EAAMC,KAAN,KAAgB;MACvB;;MACA;MAAA,QAAC,IAAD;QACA,EAAE,EAAGH,MAAM,CAACG,KAAD,CAAN,CAAcC,EADnB;QAEA,IAAI,EAAIJ,MAAM,CAACG,KAAD,CAAN,CAAcE,IAFtB;QAGA,KAAK,EAAEL,MAAM,CAACG,KAAD,CAAN,CAAcG;MAHrB,GAAWH,KAAX;QAAA;QAAA;QAAA;MAAA;IAMH,CARD;EAFJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAmBH,CArBD;;KAAMJ,Q;AAuBN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}